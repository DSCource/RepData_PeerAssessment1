{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\noutput: \n  html_document:\n    keep_md: true\n---\n\n## Overview\nPersonal devices are collecting large amounts of personal data using devices such as \n[Fitbit](http://www.fitbit.com), [Nike\nFuelband](http://www.nike.com/us/en_us/c/nikeplus-fuelband), or\n[Jawbone Up](https://jawbone.com/up). This project provides an inital analysis of such a data set.\n\n\n## Data\nThis assignment makes use of data from a personal activity monitoring\ndevice. This device collects data at 5 minute intervals through out the\nday. The data consists of two months of data from an anonymous\nindividual collected during the months of October and November, 2012\nand include the number of steps taken in 5 minute intervals each day.\n\n\n\n* Dataset: [Activity monitoring data](https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip) [52K]\n\nThe variables included in this dataset are:\n\n* **steps**: Number of steps taking in a 5-minute interval (missing\n    values are coded as `NA`)\n\n* **date**: The date on which the measurement was taken in YYYY-MM-DD\n    format\n\n* **interval**: Identifier for the 5-minute interval in which\n    measurement was taken\n\n## Loading and preprocessing the data\nThe data is in a compressed file, **activity.zip**, included GitHub repository that is forked and cloned for this project.  The step involved to prepare the dataset are:\n1 unzip the file\n2 change **interval** into a *factor* variable\n\n```{r, echo=TRUE}\n# Load the CSV and clean data - make it tidy\nunzip(\"data/activity.zip\")\nactivity <- read.csv(\"Data/repdata_data_activity/activity.csv\")\n#  interval time as factor\nactivity$interval <- as.factor(activity$interval)\n```\n\n## What is mean total number of steps taken per day?\nComputing the *mean total number of steps taken per day involves:\n\n* Compute the total steps per day\n\n* Compute the mean of the totals\n\n* Round the computed mean number of step per day\n\n* Compute the median number of step per day\n\nA histogram of *Step per Day* is generated to show the range of daily steps.  The mean and median value for all days are printed.\n\n```{r, echo=TRUE}\n\n#  Compute total steps per day\ntotalStepsPerDay <- tapply(activity[,1], activity[,2], sum, na.rm = TRUE)\n\n# Display histogram of number of day by number of steps\nhist(totalStepsPerDay, xlab = \"Total Steps\", ylab = \" Number of Days\", \n     main = \"Histogram of Total Steps in Day\", breaks = 50 )\n\n#  Calculate and print the mean and median steps per day\nmeanSteps   = round(mean(  totalStepsPerDay))  #  fraction of steps don't make sense \nmedianSteps = median(totalStepsPerDay)\nprint(paste(\"Mean   steps per day \", as.character(meanSteps)))\nprint(paste(\"Median steps per day \", as.character(medianSteps)))\n```\n\n\n## What is the average daily activity pattern?\nThe daily activity measured by calculating the *average number of steps per 5 minute interval*.  The daily average is plotted where the x axis is the time of day as formatted as *HHMM*.  As an example, *1000* is 10:00 AM.\n\nThe *5 minute interval*  with the largest number of step is determined and printed.\n\n```{r, echo=TRUE}\n#   Compute mean activity level by time interval\n#                    steps       interval\navgStepsPerInterval <- tapply(activity[,1], activity[,3], mean, na.rm = TRUE)\navgStepsPerInterval <- round(avgStepsPerInterval)\n\n#  plot Interval vs Mean Step for weekend\nplot(names(avgStepsPerInterval), avgStepsPerInterval, type = \"l\", xlab = \"5 Minute Interval\", ylab = \"Mean Steps\", main = \"Activity Levels\")\n\n#  Determine the 5 minute interval with max number of steps on average\nml <- which.max(avgStepsPerInterval)  #  find index of max value\nmaxAvg <- activity$interval[ml]  #  lookup interval with that index\nprint(paste(\"5 Minute Interval with maximum average number of steps is \",as.character(maxAvg)))\n```\n\n\n## Imputing missing values\nThere are numerous *step* measure with NA value.  Since the *5 minute interval step average* is available for all intervals, a new activity data.frame, *newActivity*, is created with the NA values replaced by the average number of steps for that interval.\n\nThe number of missing value is determined and printed.\n\nThe mean and median values are recomputed and the Daily Steps Histogram regenerated.\n\n```{r, echo=TRUE}\n#  determine number of missing values\nmissingValues <- is.na(activity$steps)  #  creates a vector of booleans where TRUE => NA\nprint(paste(\"Number of missing step values \",as.character(sum(missingValues))))  #  summing the booleans => number of NA\n\nintervals <- unique(activity$interval)\navgInt <- data.frame(intervals, avgStepsPerInterval)  # create data frame of intervals and average steps\n#impute missing values\nnewActivity <- activity  #  create copy of activity df\nfor(indx in which(missingValues)){  #  loop through steps equal to NA\n      if(missingValues[indx]){\n            invVal <- newActivity[indx,3]  #  identify the interval value\n            avgStep <- avgInt[avgInt$intervals == invVal,2]\n            newActivity[indx,1] <- avgStep\n      }\n      \n}\n\n#  Compute total steps per day\nntotalStepsPerDay <- tapply(newActivity[,1], newActivity[,2], sum, na.rm = TRUE)\n\n\nhist(ntotalStepsPerDay, xlab = \"Total Steps\", ylab = \" Number of Days\", \n     main = \"Histogram of Total Steps in Day with NAs Removed\", breaks = 50 )\n\nnewMeanSteps   = round(mean(  ntotalStepsPerDay))\nnewMedianSteps = median(ntotalStepsPerDay)\nprint(paste(\"Mean   steps per day with NAs removed \", as.character(newMeanSteps)))\nprint(paste(\"Median steps per day with NAs removed \", as.character(newMedianSteps)))\n```\n### Impact of Removing NA steps values\n\nThe impact of replacing the NA step values with the average value for that interval is evaluated by determing the changes in the mean and median number of steps per day.\n\n```{r, echo=TRUE}\n\ndiffMeanSteps = newMeanSteps - meanSteps\ndiffMedianSteps = newMedianSteps - medianSteps\nprint(paste(\"Change in mean   steps per day with NAs removed \", as.character(diffMeanSteps)))\nprint(paste(\"Change in median steps per day with NAs removed \", as.character(diffMedianSteps)))\n\n```\n\nIt is not a great surprise that both the mean and median values increased after NA values for steps are removed.\n\n## Are there differences in activity patterns between weekdays and weekends?\n\nThe step involved in evaluating the activity differences between weekdays and weekends are:\n\n1 Marking each row as a *weekday* or *weekend*\n\n2 Computing the average number of step for each interval for *weekday* and *weekend*\n\n3 Plotting the *weekday*, *weekend*, and activity difference (weekend - weekday)\n\n```{r, echo=TRUE}\n#    Isolate dates and Date\nweekdy <- weekdays( as.Date(newActivity$date))\n\n#  Create T/F vector of weekend days\nweekends <- weekdy == \"Sunday\" | weekdy == \"Saturday\"\n\n#  add new column indicating if date is a weekend or weekday\nnewActivity$wkpart <- as.factor(c(\"weekday\",\"weekend\"))\nnewActivity[weekends,]$wkpart <- as.factor(\"weekend\")  #  weekend\nnewActivity[!weekends,]$wkpart <- as.factor(\"weekday\") #  weekday\n\nlibrary(dplyr)\n#  calculate activity means by interval for weekend\nwkpart <- filter(newActivity, wkpart == \"weekend\")  #  isolate weekends\n#                    steps       interval\nwkendMeans <- tapply(wkpart[,1], wkpart[,3], mean)\n\npar(mfrow = c(3,1))\n\n#  plot Interval vs Mean Step for weekend\nplot(names(wkendMeans), wkendMeans, type = \"l\", xlab = \"5 Minute Interval\", ylab = \"Mean Steps\", main = \"Weekend Activity Levels\")\n\n#  calculate activity means by interval for weekday\nwkpart <- filter(newActivity, wkpart == \"weekday\")  #  isolate weekdays\n#                    steps       interval\nwkdayMeans <- tapply(wkpart[,1], wkpart[,3], mean)\nplot(names(wkdayMeans), wkdayMeans, type = \"l\", xlab = \"5 Minute Interval\", ylab = \"Mean Steps\", main = \"Weekday Activity Levels\")\n\nwkdiff <- wkendMeans - wkdayMeans\nplot(names(wkdiff), wkdiff, type = \"l\", xlab = \"5 Minute Interval\", ylab = \"Difference in Mean Steps\", main = \"Activity Level Differences (Weekend - Weekday)\" )\n```\n\n\n\n\n\n\nThe graphs of the *weekday* vs *weekend* show a number of differences.  On average\n\n1 Weekend activity is lower than weekday until around 9 - sleep later?\n\n2 after around 9 AM, weekend activity is higher during the day than weekday - running errands?\n\n3 Weekday activity goes higher around 6 PM to 8 PM - dinner and getting ready for the next day?\n\n4 Weekend activity goes higher after 8 PM for a short time - going to bed later?\n",
    "created" : 1426436757531.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1673921452",
    "id" : "F47AB740",
    "lastKnownWriteTime" : 1426444404,
    "path" : "~/GitHub/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}