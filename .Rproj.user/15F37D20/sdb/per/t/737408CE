{
    "contents" : "downloadFile <- function(  ){\n      url <-  \"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip\"\n      file <- \"repdata_data_Factivity.zip\"\n      dir <- \"./Data\"\n      browser()\n      if( !file.exists(dir)){\n            dir.create(dir)\n      }\n      destfile <- paste(dir, file, sep=\"/\")\n      download.file(url, destfile, method=\"curl\")\n}\n#browser()\nactivity <- vector()\n\n# Load the CSV and clean data - make it tidy\nunzip(\"data/activity.zip\")\nactivity <- read.csv(\"Data/repdata_data_activity/activity.csv\")\n#activity$date <- as.Date(activity$date)\n\n#  interval time \nactivity$interval <- as.factor(activity$interval)\nstr(activity)\n\ntotalStepsPerDay <- tapply(activity[,1], activity[,2], sum, na.rm = TRUE)\n\n      hist(totalStepsPerDay, xlab = \"Total Steps\", ylab = \" Number of Days\", \n           main = \"Histogram of Total Steps in Day\", breaks = 50 )\n      \n      meanSteps   = round(mean(  totalStepsPerDay))\n      medianSteps = median(totalStepsPerDay)\n      print(paste(\"Mean   steps per day \", as.character(meanSteps)))\n      print(paste(\"Median steps per day \", as.character(medianSteps)))\n\n\nnewActivity <- activity\n\n\n#activityLevel <- function(){\n\n#   Compute mean activity level by time interval\n#                    steps       interval\navgStepsPerInterval <- tapply(activity[,1], activity[,3], mean, na.rm = TRUE)\navgStepsPerInterval <- round(avgStepsPerInterval)\n\n#  plot Interval vs Mean Step for weekend\nplot(names(avgStepsPerInterval), avgStepsPerInterval, type = \"l\", xlab = \"5 Minute Interval\", ylab = \"Mean Steps\", main = \"Activity Levels\")\nbrowser()\nml <- which.max(avgStepsPerInterval)\nbrowser()\nmaxAvg <- activity$interval[ml]  #  determine index of interval with max average\nbrowser()\nprint(paste(\"5 Minute Interval with maximum average number of steps is \",as.character(maxAvg)))\nbrowser()\n     \n      #  determine number of missing values\n      missingValues <- is.na(activity$steps)\n      print(sum(missingValues))\n      browser()\n      intervals <- unique(activity$interval)\n      avgStepsPerInterval <- round(avgStepsPerInterval)\n      names(avgStepsPerInterval) <- NULL\n      avgInt <- data.frame(intervals, avgStepsPerInterval)\n      #impute missing values\n      #newActivity <- activity\nbrowser()\n      for(indx in which(missingValues)){\n            #browser()\n            if(missingValues[indx]){\n                  invVal <- newActivity[indx,3]  #  identify the inverval value\n                  avgStep <- avgInt[avgInt$intervals == invVal,2]\n                  newActivity[indx,1] <- avgStep\n                  #browser()\n            }\n            \n      }\nbrowser()\n      days <- unique(newActivity$date)\nntotalStepsPerDay <- tapply(newActivity[,1], newActivity[,2], sum)\n\n      \n     \n      hist(ntotalStepsPerDay, xlab = \"Total Steps\", ylab = \" Number of Days\", \n           main = \"Histogram of Total Steps in Day with NA Removed\", breaks = 50 )\n      \n      #browser()\n      meanSteps   = mean(  ntotalStepsPerDay)\n      medianSteps = median(ntotalStepsPerDay)\n      print(paste(\"Mean   steps per day \", as.character(meanSteps)))\n      print(paste(\"Median steps per day \", as.character(medianSteps)))\n      #browser()\n\nwkdiff <- ntotalStepsPerDay - totalStepsPerDay\nnomen <- names(totalStepsPerDay)\nbrowser()\nplot(nomen, wkdiff, type = \"l\", xlab = \"Day\", ylab = \"Difference in Total Steps\", main = \"Effect of Removing NA on Steps per Day\" )\n\n      \n      \n#}\n#browser()\nweekdy <- weekdays( as.Date(newActivity$date))\nweekends <- weekdy == \"Sunday\" | weekdy == \"Saturday\"\n#browser()\nnewActivity$wkend <- as.factor(c(\"weekday\",\"weekend\"))\nnewActivity[weekends,]$wkend <- as.factor(\"weekend\")\nnewActivity[!weekends,]$wkend <- as.factor(\"weekday\")\n\nlibrary(dplyr)\nwkpart <- filter(newActivity, wkend == \"weekend\")\nrm(list)\n#                    steps       interval\nwkendMeans <- tapply(wkpart[,1], wkpart[,3], mean)\nplot(names(wkendMeans), wkendMeans, type = \"l\", xlab = \"Interval\", ylab = \"Mean Steps\", main = \"Weekend Activity Levels\")\n\nwkpart <- filter(newActivity, wkend == \"weekday\")\n#                    steps       interval\nwkdayMeans <- tapply(wkpart[,1], wkpart[,3], mean)\nplot(names(wkdayMeans), wkdayMeans, type = \"l\", xlab = \"Interval\", ylab = \"Mean Steps\", main = \"Weekday Activity Levels\")\n\nwkdiff <- wkendMeans - wkdayMeans\nplot(names(wkdiff), wkdiff, type = \"l\", xlab = \"Interval\", ylab = \"Difference in Mean Steps\", main = \"Activity Level Differences (Weekend - Weekday)\" )\n\n\nntotalStepsPerDay <- tapply(newActivity[,1], newActivity[,2], sum, na.rm = TRUE)\nbrowser()\n\nhist(ntotalStepsPerDay, xlab = \"Total Steps\", ylab = \" Number of Days\", \n     main = \"Histogram of Total Steps in Day with NAs Removed\", breaks = 50 )\n\n\nnewMeanSteps   = round(mean(  ntotalStepsPerDay))\nnewMedianSteps = median(ntotalStepsPerDay)\nprint(paste(\"Mean   steps per day with NAs removed \", as.character(newMeanSteps)))\nprint(paste(\"Median steps per day with NAs removed \", as.character(newMedianSteps)))\n\n\nbrowser()\n\n\n\n",
    "created" : 1426354828472.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3287098863",
    "id" : "737408CE",
    "lastKnownWriteTime" : 1426440776,
    "path" : "~/GitHub/RepData_PeerAssessment1/R Code/explore.R",
    "project_path" : "R Code/explore.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}